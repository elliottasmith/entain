syntax = "proto3";
package racing;

option go_package = "/racing";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

service Racing {
  // ListRaces returns a list of all races.
  rpc ListRaces(ListRacesRequest) returns (ListRacesResponse) {
    option (google.api.http) = { post: "/v1/list-races", body: "*" };
  }
}

/* Requests/Responses */

// Request for ListRaces call.
message ListRacesRequest {
  ListRacesRequestFilter filter = 1;
  ListRacesRequestOrder order = 2;
}

// Response to ListRaces call.
message ListRacesResponse {
  repeated Race races = 1;
}

// Filter for listing races.
message ListRacesRequestFilter {
  repeated int64 meeting_ids = 1;
  // VisibleOnly, if true will filter results that are visible only, by default all results will be returned.
  bool visible_only = 2;
}

// Order for listing races.
message ListRacesRequestOrder {
  string field = 1;
  Direction direction = 2;
}

/* Resources */

// A race resource.
message Race {
  // ID represents a unique identifier for the race.
  int64 id = 1;
  // MeetingID represents a unique identifier for the races meeting.
  int64 meeting_id = 2;
  // Name is the official name given to the race.
  string name = 3;
  // Number represents the number of the race.
  int64 number = 4;
  // Visible represents whether or not the race is visible.
  bool visible = 5;
  // AdvertisedStartTime is the time the race is advertised to run.
  google.protobuf.Timestamp advertised_start_time = 6;
  // Status indicates wether the race is open or closed
  Status status = 7;
}

/* Enumerations */
enum Direction {
  // As SQLite defaults to ASC, I will use the same logic here for consistency
  ASC = 0;
  DESC = 1;
}

enum Status {
  // Defaults to closed
  CLOSED = 0;
  OPEN = 1;
}